{% extends 'base.html.twig' %}

{% block title %}Editer Commande{% endblock %}

{% block body %}
    <style>
        .order-header {
            background: linear-gradient(135deg, #3498db, #2c3e50);
            color: white;
            padding: 2rem;
            border-radius: 10px;
            margin-bottom: 2rem;
            text-align: center;
        }

        .product-card {
            border: 1px solid #e9ecef;
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 0.5rem;
            transition: all 0.2s ease;
        }

        .product-card:hover {
            border-color: #3498db;
            background-color: #f8f9fa;
        }

        .product-card.selected {
            border-color: #3498db;
            background-color: #e3f2fd;
        }

        .section-card {
            background: white;
            border-radius: 10px;
            padding: 2rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 2rem;
        }

        .btn-submit {
            background: linear-gradient(135deg, #27ae60, #2ecc71);
            border: none;
            padding: 1rem 2rem;
            border-radius: 25px;
            color: white;
            font-weight: 600;
            transition: transform 0.2s ease;
        }

        .btn-submit:hover {
            transform: translateY(-2px);
            color: white;
        }
    </style>

    <div class="container mt-4">
        <!-- Header -->
        <div class="order-header">
            <h1 class="mb-2">
                <i class="fas fa-edit me-2"></i>
                Modifier votre commande
            </h1>
            <p class="mb-0">Sélectionnez vos produits et confirmez votre adresse</p>
        </div>

        {{ form_start(form, {'attr': {'class': 'needs-validation'}}) }}

        <!-- Products Section -->
        <div class="section-card">
            <h4 class="mb-3">
                <i class="fas fa-shopping-cart me-2"></i>
                Produits disponibles
            </h4>
            {{ form_help(form.products) }}

            <div class="form-group mt-3">
                {{ form_errors(form.products) }}
                <div class="row">
                    {% for productField in form.products %}
                        <div class="col-md-6 mb-2">
                            <div class="product-card">
                                <div class="form-check">
                                    {{ form_widget(productField, {'attr': {'class': 'form-check-input product-checkbox'}}) }}
                                    {{ form_label(productField, null, {'label_attr': {'class': 'form-check-label'}}) }}
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
        </div>

        <!-- Address Section -->
        <div class="section-card">
            <h4 class="mb-3">
                <i class="fas fa-map-marker-alt me-2"></i>
                Adresse de livraison
            </h4>
            {{ form_row(form.adresse, {
                'attr': {
                    'rows': 3,
                    'placeholder': 'Entrez votre adresse complète...'
                }
            }) }}
        </div>

        <!-- Submit Button -->
        <div class="text-center">
            <button type="submit" class="btn btn-submit">
                <i class="fas fa-paper-plane me-2"></i>
                Envoyer la commande
            </button>
        </div>

        {{ form_end(form) }}
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const checkboxes = document.querySelectorAll('.product-checkbox');

            checkboxes.forEach(checkbox => {
                const productCard = checkbox.closest('.product-card');

                // Initialize selected state
                if (checkbox.checked) {
                    productCard.classList.add('selected');
                }

                // Handle checkbox change
                checkbox.addEventListener('change', function() {
                    if (this.checked) {
                        productCard.classList.add('selected');
                    } else {
                        productCard.classList.remove('selected');
                    }
                });

                // Click on card to toggle checkbox
                productCard.addEventListener('click', function(e) {
                    if (e.target !== checkbox) {
                        checkbox.checked = !checkbox.checked;
                        checkbox.dispatchEvent(new Event('change'));
                    }
                });
            });
        });
    </script>
{% endblock %}