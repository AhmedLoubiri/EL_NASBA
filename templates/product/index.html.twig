{% extends 'base.html.twig' %}

{% block title %}Produits - EL_NASBA{% endblock %}

{% block body %}
<div class="container my-5">
  <div class="row">
    <!-- Filters Sidebar -->
    <div class="col-lg-3">
      <div class="category-filter">
        <h5><i class="fas fa-filter"></i> Filtres</h5>
        <form method="get" action="{{ path('app_product_app_products') }}" class="mb-4">
          <div class="row">
            <div class="col-6">
              <label for="price_min" class="form-label">Min Price:</label>
              <input type="number"
                     name="price_min"
                     id="price_min"
                     class="form-control form-control-sm"
                     value="{{ app.request.get('price_min') }}"
                     min="0">
            </div>
            <div class="col-6">
              <label for="price_max" class="form-label">Max Price:</label>
              <input type="number"
                     name="price_max"
                     id="price_max"
                     class="form-control form-control-sm"
                     value="{{ app.request.get('price_max') }}"
                     min="0">
            </div>
          </div>
          <div class="mb-4">
            <h6>Catégories</h6>
            {% if categories is defined %}
              {% for category in categories %}
                <div class="form-check">
                  <input class="form-check-input" type="checkbox"
                         value="{{ category.id }}"
                         name="categories[]"
                         id="category{{ category.id }}"
                         {% if selected_categories is defined and category.id in selected_categories %}checked{% endif %}>
                  <label class="form-check-label" for="category{{ category.id }}">
                    {{ category.label }}
                  </label>
                </div>
              {% endfor %}
            {% endif %}
          </div>
          {% if seasons is defined %}
            <div class="mb-4">
              <h6>Saisons</h6>
              {% set selectedSeasons = app.request.query.all('seasons') ?: [] %}
              {% for season in seasons %}
                <div class="form-check">
                  <input
                          class="form-check-input"
                          type="checkbox"
                          name="seasons[]"
                          value="{{ season.id }}"
                          id="season{{ season.id }}"
                          {% if season.id in selectedSeasons %}checked{% endif %}
                  >
                  <label class="form-check-label" for="season{{ season.id }}">
                    {{ season.name }}
                  </label>
                </div>
              {% endfor %}
            </div>
          {% endif %}

          <button type="submit" class="btn btn-light btn-sm mt-3 w-100">Appliquer les filtres</button>
        </form>
      </div>
    </div>

    <!-- Products Grid -->
    <div class="col-lg-9">
      <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Nos Produits</h2>
        <div class="d-flex align-items-center">
          <label for="sortBy" class="form-label me-2">Trier par:</label>
          <select class="form-select form-select-sm" id="sortBy" style="width: auto;">
            <option value="name">Nom</option>
            <option value="price_asc">Prix croissant</option>
            <option value="price_desc">Prix décroissant</option>
            <option value="newest">Plus récent</option>
          </select>
        </div>
      </div>

      <div class="row">
        {% if products is defined %}
        {% for product in products %}
        <div class="col-lg-4 col-md-6 mb-4">
          <div class="card product-card h-100">
            <img src="{{ asset('pics/' ~ product.ImageUrl) }}" class="product-image" alt="{{ product.label }}">
            <div class="card-body">
              <h5 class="card-title">{{ product.label }}</h5>
              <p class="card-text">{{ product.description|slice(0, 100) }}...</p>

              <!-- Categories -->
              <div class="mb-2">
                {% for category in product.categories %}
                <span class="badge bg-secondary me-1">{{ category.label }}</span>
                {% endfor %}
              </div>

              <div class="d-flex justify-content-between align-items-center">
                <span class="price">{{ product.prix }}dt</span>
                <div class="btn-group">
                  <a href="{{ path('app_product_show_product', {'id': product.id}) }}"
                    class="btn btn-outline-primary btn-sm">
                    <i class="fas fa-eye"></i> Voir
                  </a>
                  {% if app.user %}
                  <form method="post" action="{{ path('app_cart_add', {'id': product.id}) }}" class="d-inline">
                    <button type="submit" class="btn btn-primary btn-sm">
                      <i class="fas fa-cart-plus"></i> Ajouter
                    </button>
                  </form>
                  {% endif %}
                </div>
              </div>
            </div>
          </div>
        </div>
        {% endfor %}
        {% else %}
        <div class="col-12 text-center">
          <p class="text-muted">Aucun produit trouvé.</p>
        </div>
        {% endif %}
      </div>

      <!-- Pagination -->
      {% if products is defined and products.haveToPaginate is defined %}
      <nav aria-label="Products pagination">
        {{ knp_pagination_render(products) }}
      </nav>
      {% endif %}
    </div>
  </div>
</div>
{% endblock %}

{% block javascripts %}
<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Filter functionality
    const categoryCheckboxes = document.querySelectorAll('input[type="checkbox"]');
    const sortSelect = document.getElementById('sortBy');

    function applyFilters() {
      // Get selected categories
      const selectedCategories = Array.from(categoryCheckboxes)
        .filter(cb => cb.checked)
        .map(cb => cb.value);

      // Get price range
      const priceMin = document.getElementById('priceMin').value;
      const priceMax = document.getElementById('priceMax').value;

      // Get sort option
      const sortBy = sortSelect.value;

      // Build URL with filters
      const params = new URLSearchParams();
      if (selectedCategories.length > 0) {
        params.append('categories', selectedCategories.join(','));
      }
      if (priceMin) params.append('price_min', priceMin);
      if (priceMax) params.append('price_max', priceMax);
      if (sortBy) params.append('sort', sortBy);

      // Redirect with filters
      window.location.href = '{{ path('app_product_list_product') }}?' + params.toString();
    }

    // Add event listeners
    categoryCheckboxes.forEach(cb => cb.addEventListener('change', applyFilters));
    sortSelect.addEventListener('change', applyFilters);
    document.getElementById('priceMin').addEventListener('change', applyFilters);
    document.getElementById('priceMax').addEventListener('change', applyFilters);
  });
</script>
{% endblock %}
