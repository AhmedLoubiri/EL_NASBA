{# Include this in your product listing/detail pages #}
<form class="add-to-cart-form" data-product-id="{{ product.id }}">
    <div class="input-group mb-3">
        <input type="number" class="form-control" name="quantity" value="1" min="1" max="99">
        <button class="btn btn-primary" type="submit">
            <i class="fas fa-cart-plus me-2"></i>Ajouter au panier
        </button>
    </div>
</form>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        document.querySelectorAll('.add-to-cart-form').forEach(form => {
            form.addEventListener('submit', function(e) {
                e.preventDefault();

                const productId = this.dataset.productId;
                const quantity = this.querySelector('input[name="quantity"]').value;
                const button = this.querySelector('button');
                const originalText = button.innerHTML;

                // Show loading state
                button.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Ajout...';
                button.disabled = true;

                fetch(`/cart/add/${productId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: `quantity=${quantity}`
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Show success state
                            button.innerHTML = '<i class="fas fa-check me-2"></i>AjoutÃ© !';
                            button.classList.remove('btn-primary');
                            button.classList.add('btn-success');

                            // Update cart count
                            updateCartCount();

                            // Reset button after 2 seconds
                            setTimeout(() => {
                                button.innerHTML = originalText;
                                button.classList.remove('btn-success');
                                button.classList.add('btn-primary');
                                button.disabled = false;
                            }, 2000);
                        } else {
                            alert('Erreur: ' + data.message);
                            button.innerHTML = originalText;
                            button.disabled = false;
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Erreur lors de l\'ajout au panier');
                        button.innerHTML = originalText;
                        button.disabled = false;
                    });
            });
        });
    });

    function updateCartCount() {
        fetch('/cart/count')
            .then(response => response.json())
            .then(data => {
                const badge = document.querySelector('.cart-badge');
                if (badge) {
                    badge.textContent = data.count;
                    badge.style.display = data.count > 0 ? 'block' : 'none';
                }
            });
    }
</script>
